---
name: "Auto Update README"

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
  workflow_run:
    workflows: ["Expo Review"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-readme:
    name: "Update README"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Commit Message
        id: last_commit
        run: |
          LATEST_MSG=$(git log -1 --pretty=format:%s)
          echo "LAST_COMMIT_MSG=$LATEST_MSG" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'

      - name: Install dependencies
        run: |
          npm install
          npx expo install --fix

      - name: Run README Update Script
        run: npm run update-readme

      - name: Check for Changes
        id: git_status
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "CHANGES_DETECTED=true" >> $GITHUB_ENV
            echo "Changes detected, proceeding with PR creation..."
          else
            echo "CHANGES_DETECTED=false" >> $GITHUB_ENV
            echo "No changes detected. Exiting."
            exit 0  # Exit successfully if no changes
          fi

      - name: Create Pull Request
        id: create-pr
        if: env.CHANGES_DETECTED == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_GITHUB_ACTIONS }}
          commit-message: "Auto-update README for commit: ${{ env.LAST_COMMIT_MSG }}"
          branch: auto-update-readme-${{ github.run_id }}
          delete-branch: true
          title: "Auto-update README"
          assignees: "Nathanvititoe"
          body: |
            This PR updates the README automatically.

            Based on commit: ${{ env.LAST_COMMIT_MSG }}
          base: main
          labels: "auto-merge, README update"

      - name: Pull Latest Main and Rebase
        run: |
          git fetch origin main

          git pull --rebase origin main

      - name: Verify PR Creation
        run: |
          if [[ -z "${{ steps.create-pr.outputs.pull-request-number }}" ]]; then
            echo "::error::Failed to create PR despite changes being detected."
            exit 1
          else
            echo "PR #${{ steps.create-pr.outputs.pull-request-number }} created successfully."
          fi

      - name: Auto-Merge the PR
        run: |
          gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --merge --admin --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_ACTIONS }}

      - name: Delete Merged Branch (Redundancy Check)
        run: |
          BRANCH_NAME="auto-update-readme-${{ github.run_id }}"
          if gh api repos/${{ github.repository }}/branches/$BRANCH_NAME >/dev/null 2>&1; then
            echo "Branch $BRANCH_NAME still exists. Deleting..."
            gh api -X DELETE repos/${{ github.repository }}/git/refs/heads/$BRANCH_NAME
          else
            echo "Branch $BRANCH_NAME has already been deleted."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_ACTIONS }}
